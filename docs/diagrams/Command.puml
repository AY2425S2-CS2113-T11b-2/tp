@startuml
'https://plantuml.com/class-diagram
hide circle
skinparam classAttributeIconSize 0

interface Command <<interface>>{
    +  execute() : void
}
class AddUserModule {
    +AddUserModule(user: User, moduleCode: String, semester: int)
    - moduleCode: String
    - semester: int
    + execute() : void
}

class AddCustomModule {
    -name: String
    -moduleCode: String
    -numMC : int
    -semester: int
    + AddCustomModule(user: User, moduleCode: String, semester: int, numMC: int, name: String)
    + execute():void
}

class DeleteUserModule {
+ DeleteUserModule(user: User, moduleCode: String)
- moduleCode: String
    + execute() : void
}
class DetailModules {
    - modCode:String
    + DetailModules(modCode:String)
    + void textWrapDescription(description:String)
    + execute() : void
}

class GetUserGPA{
- gpa:double
+ GetUserGPA(user: User)
    + execute() : void
}
class GradeModule {
- moduleCode: String
+ GradeModule(user: User, moduleCode: String, grade: String)
    + execute() : void
}

class Help {
    - command:String
    + Help()
    + Help(command:String)
    + execute() : void
    - void printAll()
    - void printSpecific(command:String)
}


class ListModules {
    - sem:int
    + ListModules(user:User)
    + ListModules(user:User, semester:String)
    + execute() : void
    + execute(sem:int):void
}
class RecommendedSchedule {
    + execute():void
    - printSemester():void
}

class Specialisation {
    + execute(): void
    + textWrapDescription(description: String): void
    + printHeaderDivider(): void
    + printSpecialisationHeader(specialisationName: String): void
    + printSectionHeader(headerText: String): void
}

class SuUserModule {
-moduleCode:String
+ SuUserModule(user: User, moduleCode: String)
+ execute() : void
}

class ViewGradRequirements {
+ ViewGradRequirements(user: User)
+ execute() : void
}
class Workload {
-sem:int
+Workload(user:User)
+Workload(user:User, semester:String)
+execute() : void
}

enum Grade <<enumeration>>{
-label:String
-gpa:double
    A_PLUS("A+", 5.0)
    A("A", 5.0)
    A_MINUS("A-", 4.5)
    B_PLUS("B+", 4.0)
    B("B", 3.5)
    B_MINUS("B-", 3.0)
    C_PLUS("C+", 2.5)
    C("C", 2.0)
    D_PLUS("D+", 1.5)
    D("D", 1.0)
    F("F", 0.0)
}

class WaiveModPrereq {
    - moduleCode: String
    - user: User
    + WaiveModPrereq(user: User, moduleCode: String)
    + execute(): void
}

WaiveModPrereq ..|> Command
WaiveModPrereq --> User : uses

class User

User <-- GetUserGPA
User <--AddUserModule
AddCustomModule --> User
User <-- DeleteUserModule
User <-- ListModules

GradeModule --> User
Grade <-- GradeModule

Command <|-[dashed]- Specialisation
Command <|-[dashed]- AddUserModule

Command <|-[dashed]- DeleteUserModule
Command <|-[dashed]- DetailModules
Command <|-[dashed]- GetUserGPA
Command <|-[dashed]- ListModules

Command <|.. Help
SuUserModule -[dashed]-|> Command
GradeModule -[dashed]-|> Command
RecommendedSchedule -[dashed]-|> Command
Workload -[dashed]-|> Command
ViewGradRequirements-[dashed]-|> Command
AddCustomModule-[dashed]-|> Command


@enduml